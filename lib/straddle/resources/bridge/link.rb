# frozen_string_literal: true

module Straddle
  module Resources
    class Bridge
      class Link
        # Some parameter documentations has been truncated, see
        # {Straddle::Models::Bridge::LinkBankAccountParams} for more details.
        #
        # Use Bridge to create a new paykey using a bank routing and account number as the
        # source. This endpoint allows you to create a secure payment token linked to a
        # specific bank account.
        #
        # @overload bank_account(account_number:, account_type:, customer_id:, routing_number:, config: nil, metadata: nil, correlation_id: nil, request_id: nil, straddle_account_id: nil, request_options: {})
        #
        # @param account_number [String] Body param: The bank account number.
        #
        # @param account_type [Symbol, Straddle::Models::Bridge::LinkBankAccountParams::AccountType] Body param:
        #
        # @param customer_id [String] Body param: Unique identifier of the related customer object.
        #
        # @param routing_number [String] Body param: The routing number of the bank account.
        #
        # @param config [Straddle::Models::Bridge::LinkBankAccountParams::Config] Body param:
        #
        # @param metadata [Hash{Symbol=>String}, nil] Body param: Up to 20 additional user-defined key-value pairs. Useful for storing
        #
        # @param correlation_id [String] Header param: Optional client generated identifier to trace and debug a series o
        #
        # @param request_id [String] Header param: Optional client generated identifier to trace and debug a request.
        #
        # @param straddle_account_id [String] Header param: For use by platforms to specify an account id and set scope of a r
        #
        # @param request_options [Straddle::RequestOptions, Hash{Symbol=>Object}, nil]
        #
        # @return [Straddle::Models::PaykeyV1]
        #
        # @see Straddle::Models::Bridge::LinkBankAccountParams
        def bank_account(params)
          parsed, options = Straddle::Bridge::LinkBankAccountParams.dump_request(params)
          header_params =
            {
              correlation_id: "correlation-id",
              request_id: "request-id",
              straddle_account_id: "straddle-account-id"
            }
          @client.request(
            method: :post,
            path: "v1/bridge/bank_account",
            headers: parsed.slice(*header_params.keys).transform_keys(header_params),
            body: parsed.except(*header_params.keys),
            model: Straddle::PaykeyV1,
            options: options
          )
        end

        # Some parameter documentations has been truncated, see
        # {Straddle::Models::Bridge::LinkCreatePaykeyParams} for more details.
        #
        # Creates a new paykey using a Quiltt token as the source. This endpoint allows
        # you to create a secure payment token linked to a bank account authenticated
        # through Quiltt.
        #
        # @overload create_paykey(customer_id:, quiltt_token:, config: nil, metadata: nil, correlation_id: nil, request_id: nil, straddle_account_id: nil, request_options: {})
        #
        # @param customer_id [String] Body param: Unique identifier of the related customer object.
        #
        # @param quiltt_token [String] Body param: Quiltt processor token generated by your application for use with th
        #
        # @param config [Straddle::Models::Bridge::LinkCreatePaykeyParams::Config] Body param:
        #
        # @param metadata [Hash{Symbol=>String}, nil] Body param: Up to 20 additional user-defined key-value pairs. Useful for storing
        #
        # @param correlation_id [String] Header param: Optional client generated identifier to trace and debug a series o
        #
        # @param request_id [String] Header param: Optional client generated identifier to trace and debug a request.
        #
        # @param straddle_account_id [String] Header param: For use by platforms to specify an account id and set scope of a r
        #
        # @param request_options [Straddle::RequestOptions, Hash{Symbol=>Object}, nil]
        #
        # @return [Straddle::Models::Bridge::LinkCreatePaykeyResponse]
        #
        # @see Straddle::Models::Bridge::LinkCreatePaykeyParams
        def create_paykey(params)
          parsed, options = Straddle::Bridge::LinkCreatePaykeyParams.dump_request(params)
          header_params =
            {
              correlation_id: "correlation-id",
              request_id: "request-id",
              straddle_account_id: "straddle-account-id"
            }
          @client.request(
            method: :post,
            path: "v1/bridge/quiltt",
            headers: parsed.slice(*header_params.keys).transform_keys(header_params),
            body: parsed.except(*header_params.keys),
            model: Straddle::Models::Bridge::LinkCreatePaykeyResponse,
            options: options
          )
        end

        # Some parameter documentations has been truncated, see
        # {Straddle::Models::Bridge::LinkCreateTanParams} for more details.
        #
        # @overload create_tan(account_type:, customer_id:, routing_number:, tan:, config: nil, metadata: nil, correlation_id: nil, request_id: nil, straddle_account_id: nil, request_options: {})
        #
        # @param account_type [Symbol, Straddle::Models::Bridge::LinkCreateTanParams::AccountType] Body param:
        #
        # @param customer_id [String] Body param: Unique identifier of the related customer object.
        #
        # @param routing_number [String] Body param: Bank routing number.
        #
        # @param tan [String] Body param: Tokenized account number.
        #
        # @param config [Straddle::Models::Bridge::LinkCreateTanParams::Config] Body param:
        #
        # @param metadata [Hash{Symbol=>String}, nil] Body param: Up to 20 additional user-defined key-value pairs. Useful for storing
        #
        # @param correlation_id [String] Header param: Optional client generated identifier to trace and debug a series o
        #
        # @param request_id [String] Header param: Optional client generated identifier to trace and debug a request.
        #
        # @param straddle_account_id [String] Header param: For use by platforms to specify an account id and set scope of a r
        #
        # @param request_options [Straddle::RequestOptions, Hash{Symbol=>Object}, nil]
        #
        # @return [Straddle::Models::Bridge::LinkCreateTanResponse]
        #
        # @see Straddle::Models::Bridge::LinkCreateTanParams
        def create_tan(params)
          parsed, options = Straddle::Bridge::LinkCreateTanParams.dump_request(params)
          header_params =
            {
              correlation_id: "correlation-id",
              request_id: "request-id",
              straddle_account_id: "straddle-account-id"
            }
          @client.request(
            method: :post,
            path: "v1/bridge/tan",
            headers: parsed.slice(*header_params.keys).transform_keys(header_params),
            body: parsed.except(*header_params.keys),
            model: Straddle::Models::Bridge::LinkCreateTanResponse,
            options: options
          )
        end

        # Some parameter documentations has been truncated, see
        # {Straddle::Models::Bridge::LinkPlaidParams} for more details.
        #
        # Use Bridge to create a new paykey using a Plaid token as the source. This
        # endpoint allows you to create a secure payment token linked to a bank account
        # authenticated through Plaid.
        #
        # @overload plaid(customer_id:, plaid_token:, config: nil, metadata: nil, correlation_id: nil, request_id: nil, straddle_account_id: nil, request_options: {})
        #
        # @param customer_id [String] Body param: Unique identifier of the related customer object.
        #
        # @param plaid_token [String] Body param: Plaid processor token generated by your application for use with the
        #
        # @param config [Straddle::Models::Bridge::LinkPlaidParams::Config] Body param:
        #
        # @param metadata [Hash{Symbol=>String}, nil] Body param: Up to 20 additional user-defined key-value pairs. Useful for storing
        #
        # @param correlation_id [String] Header param: Optional client generated identifier to trace and debug a series o
        #
        # @param request_id [String] Header param: Optional client generated identifier to trace and debug a request.
        #
        # @param straddle_account_id [String] Header param: For use by platforms to specify an account id and set scope of a r
        #
        # @param request_options [Straddle::RequestOptions, Hash{Symbol=>Object}, nil]
        #
        # @return [Straddle::Models::PaykeyV1]
        #
        # @see Straddle::Models::Bridge::LinkPlaidParams
        def plaid(params)
          parsed, options = Straddle::Bridge::LinkPlaidParams.dump_request(params)
          header_params =
            {
              correlation_id: "correlation-id",
              request_id: "request-id",
              straddle_account_id: "straddle-account-id"
            }
          @client.request(
            method: :post,
            path: "v1/bridge/plaid",
            headers: parsed.slice(*header_params.keys).transform_keys(header_params),
            body: parsed.except(*header_params.keys),
            model: Straddle::PaykeyV1,
            options: options
          )
        end

        # @api private
        #
        # @param client [Straddle::Client]
        def initialize(client:)
          @client = client
        end
      end
    end
  end
end
