module Straddle
  module Models
    type funding_event_summary_item_v1 =
      {
        data: Straddle::FundingEventSummaryItemV1::Data,
        meta: Straddle::ResponseMetadata,
        response_type: Straddle::Models::FundingEventSummaryItemV1::response_type
      }

    class FundingEventSummaryItemV1 < Straddle::Internal::Type::BaseModel
      attr_accessor data: Straddle::FundingEventSummaryItemV1::Data

      attr_accessor meta: Straddle::ResponseMetadata

      attr_accessor response_type: Straddle::Models::FundingEventSummaryItemV1::response_type

      def initialize: (
        data: Straddle::FundingEventSummaryItemV1::Data,
        meta: Straddle::ResponseMetadata,
        response_type: Straddle::Models::FundingEventSummaryItemV1::response_type
      ) -> void

      def to_hash: -> {
        data: Straddle::FundingEventSummaryItemV1::Data,
        meta: Straddle::ResponseMetadata,
        response_type: Straddle::Models::FundingEventSummaryItemV1::response_type
      }

      type data =
        {
          id: String,
          amount: Integer,
          direction: Straddle::Models::FundingEventSummaryItemV1::Data::direction,
          event_type: Straddle::Models::FundingEventSummaryItemV1::Data::event_type,
          payment_count: Integer,
          trace_numbers: ::Array[String],
          transfer_date: Date,
          trace_number: String?
        }

      class Data < Straddle::Internal::Type::BaseModel
        attr_accessor id: String

        attr_accessor amount: Integer

        attr_accessor direction: Straddle::Models::FundingEventSummaryItemV1::Data::direction

        attr_accessor event_type: Straddle::Models::FundingEventSummaryItemV1::Data::event_type

        attr_accessor payment_count: Integer

        attr_accessor trace_numbers: ::Array[String]

        attr_accessor transfer_date: Date

        attr_accessor trace_number: String?

        def initialize: (
          id: String,
          amount: Integer,
          direction: Straddle::Models::FundingEventSummaryItemV1::Data::direction,
          event_type: Straddle::Models::FundingEventSummaryItemV1::Data::event_type,
          payment_count: Integer,
          trace_numbers: ::Array[String],
          transfer_date: Date,
          ?trace_number: String?
        ) -> void

        def to_hash: -> {
          id: String,
          amount: Integer,
          direction: Straddle::Models::FundingEventSummaryItemV1::Data::direction,
          event_type: Straddle::Models::FundingEventSummaryItemV1::Data::event_type,
          payment_count: Integer,
          trace_numbers: ::Array[String],
          transfer_date: Date,
          trace_number: String?
        }

        type direction = :deposit | :withdrawal

        module Direction
          extend Straddle::Internal::Type::Enum

          DEPOSIT: :deposit
          WITHDRAWAL: :withdrawal

          def self?.values: -> ::Array[Straddle::Models::FundingEventSummaryItemV1::Data::direction]
        end

        type event_type =
          :charge_deposit
          | :charge_reversal
          | :payout_return
          | :payout_withdrawal

        module EventType
          extend Straddle::Internal::Type::Enum

          CHARGE_DEPOSIT: :charge_deposit
          CHARGE_REVERSAL: :charge_reversal
          PAYOUT_RETURN: :payout_return
          PAYOUT_WITHDRAWAL: :payout_withdrawal

          def self?.values: -> ::Array[Straddle::Models::FundingEventSummaryItemV1::Data::event_type]
        end
      end

      type response_type = :object | :array | :error | :none

      module ResponseType
        extend Straddle::Internal::Type::Enum

        OBJECT: :object
        ARRAY: :array
        ERROR: :error
        NONE: :none

        def self?.values: -> ::Array[Straddle::Models::FundingEventSummaryItemV1::response_type]
      end
    end
  end
end
