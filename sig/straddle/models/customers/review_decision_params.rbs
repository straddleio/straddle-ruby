module Straddle
  module Models
    module Customers
      type review_decision_params =
        {
          status: Straddle::Models::Customers::ReviewDecisionParams::status,
          correlation_id: String,
          request_id: String,
          straddle_account_id: String
        }
        & Straddle::Internal::Type::request_parameters

      class ReviewDecisionParams < Straddle::Internal::Type::BaseModel
        extend Straddle::Internal::Type::RequestParameters::Converter
        include Straddle::Internal::Type::RequestParameters

        attr_accessor status: Straddle::Models::Customers::ReviewDecisionParams::status

        attr_reader correlation_id: String?

        def correlation_id=: (String) -> String

        attr_reader request_id: String?

        def request_id=: (String) -> String

        attr_reader straddle_account_id: String?

        def straddle_account_id=: (String) -> String

        def initialize: (
          status: Straddle::Models::Customers::ReviewDecisionParams::status,
          ?correlation_id: String,
          ?request_id: String,
          ?straddle_account_id: String,
          ?request_options: Straddle::request_opts
        ) -> void

        def to_hash: -> {
          status: Straddle::Models::Customers::ReviewDecisionParams::status,
          correlation_id: String,
          request_id: String,
          straddle_account_id: String,
          request_options: Straddle::RequestOptions
        }

        type status = :verified | :rejected

        module Status
          extend Straddle::Internal::Type::Enum

          VERIFIED: :verified
          REJECTED: :rejected

          def self?.values: -> ::Array[Straddle::Models::Customers::ReviewDecisionParams::status]
        end
      end
    end
  end
end
