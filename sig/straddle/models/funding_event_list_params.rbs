module Straddle
  module Models
    type funding_event_list_params =
      {
        created_from: Date?,
        created_to: Date?,
        direction: Straddle::Models::FundingEventListParams::direction,
        event_type: Straddle::Models::FundingEventListParams::event_type,
        page_number: Integer,
        page_size: Integer,
        sort_by: Straddle::Models::FundingEventListParams::sort_by,
        sort_order: Straddle::Models::FundingEventListParams::sort_order,
        trace_number: String?,
        correlation_id: String,
        request_id: String,
        straddle_account_id: String
      }
      & Straddle::Internal::Type::request_parameters

    class FundingEventListParams < Straddle::Internal::Type::BaseModel
      extend Straddle::Internal::Type::RequestParameters::Converter
      include Straddle::Internal::Type::RequestParameters

      attr_accessor created_from: Date?

      attr_accessor created_to: Date?

      attr_reader direction: Straddle::Models::FundingEventListParams::direction?

      def direction=: (
        Straddle::Models::FundingEventListParams::direction
      ) -> Straddle::Models::FundingEventListParams::direction

      attr_reader event_type: Straddle::Models::FundingEventListParams::event_type?

      def event_type=: (
        Straddle::Models::FundingEventListParams::event_type
      ) -> Straddle::Models::FundingEventListParams::event_type

      attr_reader page_number: Integer?

      def page_number=: (Integer) -> Integer

      attr_reader page_size: Integer?

      def page_size=: (Integer) -> Integer

      attr_reader sort_by: Straddle::Models::FundingEventListParams::sort_by?

      def sort_by=: (
        Straddle::Models::FundingEventListParams::sort_by
      ) -> Straddle::Models::FundingEventListParams::sort_by

      attr_reader sort_order: Straddle::Models::FundingEventListParams::sort_order?

      def sort_order=: (
        Straddle::Models::FundingEventListParams::sort_order
      ) -> Straddle::Models::FundingEventListParams::sort_order

      attr_accessor trace_number: String?

      attr_reader correlation_id: String?

      def correlation_id=: (String) -> String

      attr_reader request_id: String?

      def request_id=: (String) -> String

      attr_reader straddle_account_id: String?

      def straddle_account_id=: (String) -> String

      def initialize: (
        ?created_from: Date?,
        ?created_to: Date?,
        ?direction: Straddle::Models::FundingEventListParams::direction,
        ?event_type: Straddle::Models::FundingEventListParams::event_type,
        ?page_number: Integer,
        ?page_size: Integer,
        ?sort_by: Straddle::Models::FundingEventListParams::sort_by,
        ?sort_order: Straddle::Models::FundingEventListParams::sort_order,
        ?trace_number: String?,
        ?correlation_id: String,
        ?request_id: String,
        ?straddle_account_id: String,
        ?request_options: Straddle::request_opts
      ) -> void

      def to_hash: -> {
        created_from: Date?,
        created_to: Date?,
        direction: Straddle::Models::FundingEventListParams::direction,
        event_type: Straddle::Models::FundingEventListParams::event_type,
        page_number: Integer,
        page_size: Integer,
        sort_by: Straddle::Models::FundingEventListParams::sort_by,
        sort_order: Straddle::Models::FundingEventListParams::sort_order,
        trace_number: String?,
        correlation_id: String,
        request_id: String,
        straddle_account_id: String,
        request_options: Straddle::RequestOptions
      }

      type direction = :deposit | :withdrawal

      module Direction
        extend Straddle::Internal::Type::Enum

        DEPOSIT: :deposit
        WITHDRAWAL: :withdrawal

        def self?.values: -> ::Array[Straddle::Models::FundingEventListParams::direction]
      end

      type event_type =
        :charge_deposit | :charge_reversal | :payout_return | :payout_withdrawal

      module EventType
        extend Straddle::Internal::Type::Enum

        CHARGE_DEPOSIT: :charge_deposit
        CHARGE_REVERSAL: :charge_reversal
        PAYOUT_RETURN: :payout_return
        PAYOUT_WITHDRAWAL: :payout_withdrawal

        def self?.values: -> ::Array[Straddle::Models::FundingEventListParams::event_type]
      end

      type sort_by = :transfer_date | :id | :amount

      module SortBy
        extend Straddle::Internal::Type::Enum

        TRANSFER_DATE: :transfer_date
        ID: :id
        AMOUNT: :amount

        def self?.values: -> ::Array[Straddle::Models::FundingEventListParams::sort_by]
      end

      type sort_order = :asc | :desc

      module SortOrder
        extend Straddle::Internal::Type::Enum

        ASC: :asc
        DESC: :desc

        def self?.values: -> ::Array[Straddle::Models::FundingEventListParams::sort_order]
      end
    end
  end
end
